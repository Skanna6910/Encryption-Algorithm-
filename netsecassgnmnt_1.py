# -*- coding: utf-8 -*-
"""NetsecAssgnmnt 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1azgOzOHw0Q6YpgDt8A4xLxW1A5qKkczN
"""
                                     
Last_Name = "Kanna"
First_Name = "Suprajha"                                         

                                                       # CAESAR CIPHER ENCRYPTION 
def caesar_str_enc(PT, k):                             # Ceasar cipher encryption function containing plaintext and key value as parameters
  temp =0;
  encryption_string =""                             
  PT=PT.upper()                                        # converting plaintext to UPPER case characters
  for i in PT:
    if i!= " ":
     print(chr(ord(i)))                                 # finds the ASCII value and converts into character
     temp = 65 + ((ord(i) - 65 + k) % 26)               # We have applied the Caesar Cipher formula C = (P + K) % 26 and subtracted 65 to reduce alphabet value A=0, B=2..  
     encryption_string = encryption_string + chr(temp)  # the encrypted character is concatenated to obtain a string
  
  print("The ciphertext is:",encryption_string)


PT=input("Enter the message to be encrypted: ")        # message to be encrypted is given 
k=int(input("Enter the key: "))                        # key to encrypt the message is given
caesar_str_enc(PT, k)                                  # message and key are passed as parameters to encryption function


                                                       # CAESAR CIPHER DECRYPTION 
def caesar_str_dec(CT,k):
  decryption_string = ""
  temp1 = 0;
  CT=CT.upper()
  for i in CT:
     print(chr(ord(i)))                                 # finds the ASCII value and converts into character
     temp1 = 65 + ((ord(i) - 65 - k) % 26)              # We have applied the Caesar Cipher formula P = (C - K) % 26

     decryption_string = decryption_string + chr(temp1) # the encrypted character is concatenated to obtain the plaintext string
 
  print("The plaintext is:",decryption_string) 




CT=input("Enter the message to be crypted: ")        # message to be decrypted is given 
k=int(input("Enter the key: "))                        # key to decrypt the message is given
caesar_str_dec(CT, k)                                  # message and key are passed as parameters to decryption function

